AWSTemplateFormatVersion: 2010-09-09
Description: Trend Cloud One Workload Security Integration.

Parameters:
  CloudOneApiKeySecret:
    Description: Arn of Cloud One API Key Secret. You can learn more about it at 
      https://cloudone.trendmicro.com/docs/identity-and-account-management/c1-api-key/
    Type: String
    NoEcho: true
  CloudOneRegion:
    Description: Cloud One Region. More info at https://cloudone.trendmicro.com/docs/identity-and-account-management/c1-regions/
    Type: String
    Default: us-1
    AllowedValues:
       - us-1
       - trend-us-1
       - au-1
       - ie-1
       - sg-1
       - in-1
       - jp-1
       - ca-1
       - de-1
  TrendKey:
    Description: KMS Key Arn used to encrypt all Trend secrets.
    Type: String
  TrendWorkloadSecurityAWSAccountId:
    Description: AWS Account ID for the AWS account where Trend Workload Security is hosted.
      Most likely, you don't need to edit this parameter's default.
    Type: String
    Default: "147995105371"
  TrendStagingS3Bucket:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Deployment bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-abi-pilot
    Description: S3 bucket name for the Deployment assets. Deployment bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/.]*$
    ConstraintDescription: Deployment key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), dots(.) and forward slash (/).
    Default: "cfn-abi-aws-trend-cloudone/"
    Description: S3 key prefix for the Deployment assets. Deployment key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), dots(.) and
      forward slash (/).
    Type: String
    
Resources:
#Role for adding AWS Connector to C1WS
  WorkloadSecurityRole:
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: Role is provided and used by the Product to create AWS Connector in C1WS.
              It requires access to all instances to give visibility over all instances.
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:${AWS::Partition}:iam::${TrendWorkloadSecurityAWSAccountId}:root"
            Action:
              - 'sts:AssumeRole'
            Condition:
              StringEquals:
                sts:ExternalId: !GetAtt GetExternalID.ExternalID 
      Path: /
#Policy for adding AWS Connector to C1WS
      Policies:
        - PolicyName: WorkloadSecurityRole
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:DescribeImages"
                  - "ec2:DescribeInstances"
                  - "ec2:DescribeRegions"
                  - "ec2:DescribeSubnets"
                  - "ec2:DescribeTags"
                  - "ec2:DescribeVpcs"
                  - "ec2:DescribeAvailabilityZones"
                  - "ec2:DescribeSecurityGroups"
                  - "workspaces:DescribeWorkspaces"
                  - "workspaces:DescribeWorkspaceDirectories"
                  - "workspaces:DescribeWorkspaceBundles"
                  - "workspaces:DescribeTags"
                  - "iam:ListAccountAliases"
                  - "iam:GetRole"
                  - "iam:GetRolePolicy"
                Resource: '*'

#Lambda Execution Role
  AWSConnectorLambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
          Action:
            - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyDocument: 
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource:
                  - !Sub "${CloudOneApiKeySecret}*"
              - Effect: Allow
                Action:
                  - kms:Decrypt
                Resource:
                  - !Ref TrendKey
          PolicyName: CloudOneApiKeySecretDecryptPolicy

#Get External ID
  GetExternalIDLambda:
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W58
            reason: Lambda role provides access to CloudWatch Logs
          - id: W89
            reason: Lambda does not need to communicate with VPC resources.
          - id: W92
            reason: Lambda does not need reserved concurrent executions.
      checkov:
        skip:
          - id: CKV_AWS_115
            comment: Lambda does not need reserved concurrent executions.
          - id: CKV_AWS_116
            comment: DLQ not needed, as Lambda function only triggered by CloudFormation events.
          - id: CKV_AWS_117
            comment: Lambda does not need to communicate with VPC resources.
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.9
      Architectures:
        - arm64
      Timeout: 60
      Handler: app.lambda_handler
      Role: !GetAtt AWSConnectorLambdaFunctionRole.Arn
      Code:
        S3Bucket: !Ref 'TrendStagingS3Bucket'
        S3Key: !Sub ${QSS3KeyPrefix}/lambda_functions/packages/GetExternalIDLambda/lambda.zip

#Get External ID Custom Resource
  GetExternalID:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt GetExternalIDLambda.Arn
      CloudOneApiKeySecret: !Ref CloudOneApiKeySecret
      CloudOneRegion: !Ref CloudOneRegion


#Create AWS Connector
  AWSConnectorCreateLambda:
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W58
            reason: Lambda role provides access to CloudWatch Logs
          - id: W89
            reason: Lambda does not need to communicate with VPC resources.
          - id: W92
            reason: Lambda does not need reserved concurrent executions.
      checkov:
        skip:
          - id: CKV_AWS_115
            comment: Lambda does not need reserved concurrent executions.
          - id: CKV_AWS_116
            comment: DLQ not needed, as Lambda function only triggered by CloudFormation events.
          - id: CKV_AWS_117
            comment: Lambda does not need to communicate with VPC resources.
          - id: CKV_AWS_173
            comment: Environment variables are not sensitive.
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.9
      Architectures:
        - arm64
      Timeout: 60
      Handler: app.lambda_handler
      Role: !GetAtt AWSConnectorLambdaFunctionRole.Arn
      Environment:
        Variables:
          awsaccountid: !Ref AWS::AccountId
          externalid: !GetAtt GetExternalID.ExternalID
          crossaccountrolearn: !GetAtt WorkloadSecurityRole.Arn
      Code:
        S3Bucket: !Ref 'TrendStagingS3Bucket'
        S3Key: !Sub ${QSS3KeyPrefix}/lambda_functions/packages/AWSConnectorCreateLambda/lambda.zip

#Create AWS Connector Custom Resource
  AWSConnectorCreate:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt AWSConnectorCreateLambda.Arn
      CloudOneApiKeySecret: !Ref CloudOneApiKeySecret
      CloudOneRegion: !Ref CloudOneRegion
    DependsOn: GetExternalID 

Outputs:
  CrossAccountRoleArn:
    Value: !GetAtt WorkloadSecurityRole.Arn 